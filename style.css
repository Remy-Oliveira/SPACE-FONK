@charset "UTF-8";

@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

* {
    font-family: "Poppins", sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    min-height: 100vh;
    background: url(galaxia-roxa.jpg) no-repeat;
    background-size: cover;
    background-position: center;
    transition: .2s;
}

.sidebar {
    /*position: fixed; -> Permanece fixo em uma posição específica na tela, não se desloca quando você rola a página, ele fica sempre visível no mesmo lugar. Propriedades relacionadas: top, bottom, left, right: Definem a distância do elemento em relação à borda da janela. E útil para criar elementos como menus, botões de retorno ao topo, barras de navegação, etc., que precisam estar visíveis o tempo todo*/
    position: fixed;
    /* ficará fixada no lado esquerdo da tela, ocupando 100% da altura da janela, mesmo quando você rolar a página. */
    top: 0;
    left: 0;
    /* width: 260px;*/
    width: 80px;
    height: 100%;
    /*background-color: purple; */
    background: transparent;
    backdrop-filter: blur(40px);
    border-right: 2px solid rgba(255, 255, 255, .2);
    box-shadow: 0 0 10px rgba(0, 0, 0, .2);
    padding: 6px 14px;
    transition: .3s;
}

.sidebar.active {
    /* sidebar.active -> Seleciona um elemento específico que tenha tanto a classe sidebar quanto a classe active ao mesmo tempo. Que no caso é o <nav> e a lista (painel) */
    width: 260px;

}

.sidebar .logo-menu {
    /* Estilizando a classe logo-menu que está dentro da classe sidebar */
    display: flex;
    align-items: center;
    width: 100%;
    height: 70px;
    /* background-color: slateblue; */
}

.sidebar .logo-menu .logo {
    font-size: 25px;
    color: white;
    /*pointer-events: none; -> Desativa as interações de mouse e outros ponteiros em um elemento. Isso significa que cliques, toques ou qualquer tipo de interação com o ponteiro não terão efeito no elemento, como se ele não estivesse ali. O elemento ainda pode ser visível, mas será ignorado para fins de interação.*/
    pointer-events: none;
    opacity: 0;
    transition: .3s;
}

.sidebar.active .logo-menu .logo {
    opacity: 1;
    transition-delay: .2s;
}

.sidebar .logo-menu .toggle-btn {
    /* Estilizando a classe toggle-btn que está dentro da classe sidebar */

    /* position: absolute -> é usada para posicionar um elemento em relação ao seu ancestral mais próximo que tenha uma posição diferente de static (como relative, absolute ou fixed). Se não houver um ancestral posicionado, o elemento será posicionado em relação ao elemento <html> (ou seja, ao topo da página).*/
    position: absolute;
    /*Neste caso, o ancestral posicionado mais próximo é a .sidebar, que está com position: fixed. Portanto, o .toggle-btn será posicionado em relação à .sidebar.*/

    /*left: 90%; -> o ícone ficará bem próximo da borda direita do .sidebar (restando apenas 10% da largura).*/
    left: 50%;
    /* transform: translateX(-50%); -> Ajuste fino no eixo X (horizontal), p[or ser negativo, vai para esquerda*/
    transform: translateX(-50%);
    width: 40px;
    height: 40px;
    /*background-color: salmon;*/
    font-size: 22px;
    color: white;
    text-align: center;
    /* line-height: 40px; -> Está sendo usado em conjunto com o height. Se os pixeis de ambos forem iguais,  Faz com que o ícone dentro do botão seja verticalmente centralizado: */
    line-height: 40px;
    cursor: pointer;
    transition: .5s;
}

.sidebar.active .logo-menu .toggle-btn {
    left: 90%;
}

.sidebar .list {
    margin-top: 10px;
}

.sidebar .list .list-item {
    list-style: none;
    width: 100%;
    height: 30px;
    /* background-color: slateblue; */
    margin: 5px 0;
    line-height: 50px;
    /* lembra dele, neh?*/
}

.list .list-item a {
    /* display: flex; -> transforma esse link em um contêiner flexível (ou flex container). o link (a) agora expande para preencher toda a largura do elemento pai .list-item. A áera toda é clicável. Por isso o background foi completamente preenchido. Por tanto, <a> passa a ter flex-items: <i> e <span>.  */
    display: flex;
    align-items: center;
    font-size: 18px;
    color: white;
    text-decoration: none;
    /* background-color: blue; */
    border-radius: 6px;
    transition: .3s;
    /*  white-space: nowrap; -> está dizendo ao navegador para não quebrar o texto em várias linhas, mesmo que ele ultrapasse o limite do contêiner. */
    white-space: nowrap;

}

.list .list-item a i {
    /*width: 50px; -> define uma largura fixa de 50px, ou seja, o elemento sempre terá essa largura, independentemente do tamanho do conteúdo ou da tela. */

    /* min-width: 50px; -> Garante que ele nunca terá uma largura menor que 50px */
    min-width: 50px;
    height: 50px;
    /* background-color: salmon; */
    text-align: center;
    line-height: 50px;
}

/* .list .list-item.active a, */
.list .list-item a:hover {
    /* list-item.active -> A classe active é uma convenção para indicar visualmente que um item está ativo ou selecionado. Ela não tem um comportamento específico por si só, mas é usada em conjunto com o CSS para aplicar estilos diferenciados aos elementos ativos.*/
    background-color: rgba(255, 255, 255, .2);
}

.sidebar .link-name {
    /* opacity: 0 -> propvavelmente é valor booleano, ou seja, o o text sumiu */
    opacity: 0;
    /* pointer-events: none; -> O elemento se torna "invisível" para eventos do mouse ou toques. Isso significa que cliques, arrastes, hovers e outros eventos não afetarão o elemento. */
    pointer-events: none;
    transition: opacity .3s;
}

.sidebar.active .link-name {
    /* opacity: 1 -> propvavelmente é valor booleano, ou seja, o o text apareceu */
    opacity: 1;
    pointer-events: auto;
    /* Define o atraso com base no valor de --i */
    transition-delay: calc(.1s * var(--i));
}

@media screen and (orientation: portrait) {
    body {
        min-height: 100vh;
        background: url(galaxia-roxa.jpg) no-repeat;
        background-size: cover;
        background-position: calc(80%);
        transition: .2s;
    }

    .sidebar .list .list-item {
        list-style: none;
        width: 100%;
        height: 60px;
        /* background-color: slateblue; */
        margin: 5px 0;
        line-height: 60px;
        /* lembra dele, neh?*/
    }
}